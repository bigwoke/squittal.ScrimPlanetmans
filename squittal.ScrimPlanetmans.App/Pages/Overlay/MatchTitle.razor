@using squittal.ScrimPlanetmans.ScrimMatch.Messages;
@using squittal.ScrimPlanetmans.ScrimMatch;
@using squittal.ScrimPlanetmans.Models.ScrimEngine;
@using squittal.ScrimPlanetmans.Services.ScrimMatch;

@inject IScrimMessageBroadcastService MessageService
@inject IScrimMatchEngine ScrimMatchEngine

@implements IDisposable

<div class="title-container">
    <h4 class="title-text">@Title</h4>
</div>

@code {
    private string Title => ScrimMatchEngine.ConfigTitle;

    #region Initialization Methods
    protected override void OnInitialized()
    {
        MessageService.RaiseMatchConfigurationUpdateEvent -= ReceiveMatchConfigurationUpdateMessageEvent;
        MessageService.RaiseMatchConfigurationUpdateEvent += ReceiveMatchConfigurationUpdateMessageEvent;
    }

    public void Dispose()
    {
        MessageService.RaiseMatchConfigurationUpdateEvent -= ReceiveMatchConfigurationUpdateMessageEvent;
    }
    #endregion Initialization Methods

    private void ReceiveMatchConfigurationUpdateMessageEvent(object sender, ScrimMessageEventArgs<MatchConfigurationUpdateMessage> e)
    {
        InvokeAsync(StateHasChanged);
    }
}
